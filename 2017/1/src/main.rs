static INPUT: &'static str =
"367436765224262147416876392821832169781285655941123648172835986213848397566284241467793119283183835972359686446876651\
5959157341323361671711215775246919184575771292834762472643851621115394689224144952314841942625929178893862188633473449\
7823163281389389853675932246734153563861233894952657625868415432316155487242813798425779743561987563734944962846865263\
7227127686748382444443857685684898429898781636557718473626561533722659454641286684124392489669393987654461718551445442\
8546351725874981373131436594737254881143464638159527317298246614224847423876255485865467941541869347851264186416839872\
2199638775667744977941183772494538685398862344164521446115925528534491788728448668455349588972443295391385389551783289\
4173498233833247484116891982193299966667522518155625227593745426529691476964196699145345867324369127985196977225867957\
4637169733841671684221431339322858741339953471639498418394312337551781962283797279643116626464643289347855765938779557\
3234889141897313158457637142238315327877493994933514112645586351127139429281675912366669475931711974332271368287413985\
6823749431958864559278395739864645551416792919986459366836391625883759745494677676234639355618478695273833952782489523\
1479211211312623124674275311974811382884391781254722449831984994751774562584481917597398684363662841496566446658217241\
9197227695368492433353199233558872319529626825788288176275546566474824257336863977574347328469153319428883748696399544\
9741333925898233437738973131733365688833853641663363623986366844598862839642422492289383832192555139964685869535196381\
1159993522911522883755924275292594365362368298557632392941544544337818947278245495823234198662679118286164411297441823\
9286486722654442144851173538756859647218768134572858331849543266169672745221391659363674921469481143686952478771714585\
7933229268246234829235799864347417141671343463845513626641778654528953489489534723289669957311696725735556219395848721\
8799932532232789333673661192975261324193521166424896152768777837197125965454123947176671446912221379334841447778927118\
7324629397292446879752673";

fn main() {
    let part_1 = solve_captcha(INPUT, 1);
    println!("part 1 = {}", part_1);

    let part_2 = solve_captcha(INPUT, INPUT.len() / 2);
    println!("part 2 = {}", part_2);
}

fn solve_captcha(captcha: &str, offset: usize) -> u16 {
    captcha.bytes()
           .map(ascii_char_to_number)
           .zip(INPUT.bytes().cycle().map(ascii_char_to_number).skip(offset))
           .fold(0u16, |total, (a, b)| {
               if a == b {
                   total + a
               } else {
                   total
               }
           })
}

fn ascii_char_to_number(c: u8) -> u16 {
    c.checked_sub(48).unwrap() as u16
}